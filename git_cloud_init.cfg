#cloud-config
groups:
  - docker

users:
  - name: ${config["linuxuser"]}
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys: ${config["publicssh"]}
    groups: docker

bootcmd:
  - DEBIAN_FRONTEND=noninteractive apt-get -yq update
  - DEBIAN_FRONTEND=noninteractive apt-get -yq install gnupg
  - curl -fsSL https://apt.releases.hashicorp.com/gpg       | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
  - curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

package_update: true
package_upgrade: true

apt:
  preserve_sources_list: true
  sources:
    terraform:
      source: "deb [arch=amd64 signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com bullseye main"
    docker:
      source: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian bullseye stable"

packages:
  - htop
  - rsync
  - git
  - jq
  - unzip
  - software-properties-common
  - terraform
  - docker-ce
  - docker-ce-cli
  - containerd.io

timezone: ${config["timezone"]}
hostname: gitrunner

power_state:
    delay: now
    mode: reboot

write_files:
# Register the Github runner software
  - content: |
      #!/bin/bash
      cd /actions-runner
      mycode=$(echo $RANDOM)
      ./config.sh --unattended \
                  --url https://github.com/${config["gitorg"]} \
                  --name ghr$mycode \
                  --token $(curl -s -X POST -H "Accept: application/vnd.github.v3+json" -H "authorization:token ${config["githubtoken"]}" https://api.github.com/orgs/${config["gitorg"]}/actions/runners/registration-token | jq -r .token)
      cd /
    path: /opt/githubrunner.sh
    permissions: '0755'

# Register the Gitlab runner software
  - content: |
      #!/bin/bash
      gitlab-runner register \
                    --non-interactive \
                    --url "https://gitlab.com/" \
                    --registration-token "${config["gitlabtoken"]}" \
                    --executor shell \
                    --description "shell-runner" \
                    --tag-list "shell,aws" \
                    --run-untagged="true" \
                    --locked="false" \
                    --access-level="not_protected"
    path: /opt/gitlabrunner.sh
    permissions: '0755'

# Download the Github runner software
  - content: |
      #!/bin/bash
      mkdir actions-runner && cd /actions-runner
      curl -o actions-runner-linux-x64-${config["release"]}.tar.gz -L https://github.com/actions/runner/releases/download/v${config["release"]}/actions-runner-linux-x64-${config["release"]}.tar.gz
      tar xzf ./actions-runner-linux-x64-${config["release"]}.tar.gz
      chown -R 1000:1000 /actions-runner
      cd /
    path: /opt/github.sh
    permissions: '0755'

# Download and run the Gitlab runner software
  - content: |
      #!/bin/bash
      curl -L --output /usr/local/bin/gitlab-runner "https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64"
      chmod +x /usr/local/bin/gitlab-runner
      gitlab-runner install --user=${config["linuxuser"]} --working-directory=/home/${config["linuxuser"]}
      gitlab-runner start
    path: /opt/gitlab.sh
    permissions: '0755'

# Download and install the AWS CLI
  - content: |
      #!/bin/bash
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip -q awscliv2.zip
      ./aws/install
    path: /opt/awscli.sh
    permissions: '0755'

# Download and install docker-compose
  - content: |
      #!/bin/bash
      curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      chmod a+x /usr/local/bin/docker-compose
    path: /opt/compose.sh
    permissions: '0755'

# Setup the Bitbucket Compose file
  - content: |
      version: "3.3"
      services:
        sox:
          image: "docker-public.packages.atlassian.com/sox/atlassian/bitbucket-pipelines-runner:1"
          container_name: runner-e7df7a00-275e-5bdd-8368-d66687c835db
          volumes:
            - "/tmp:/tmp"
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
          environment:
            - "ACCOUNT_UUID={377f8ca0-833d-4919-b278-6e8437bf59ae}"
            - "RUNNER_UUID={e7df7a00-275e-5bdd-8368-d66687c835db}"
            - RUNTIME_PREREQUISITES_ENABLED=true
            - OAUTH_CLIENT_ID=${config["OAUTH_ID"]}
            - OAUTH_CLIENT_SECRET=${config["OAUTH_SECRET"]}
            - WORKING_DIRECTORY=/tmp
    path: /opt/docker-compose.yml
    permissions: '0755'

runcmd:
  - sed -i -e 's/# ${config["lang"]}.UTF-8 UTF-8/${config["lang"]}.UTF-8 UTF-8/' /etc/locale.gen
  - dpkg-reconfigure --frontend=noninteractive locales
  - update-locale LANG=${config["lang"]}.UTF-8
  - /opt/compose.sh
  - /opt/awscli.sh
  - /opt/github.sh
  - /opt/gitlab.sh
  - /opt/gitlabrunner.sh
  - sudo -H -u ${config["linuxuser"]} bash -c '/opt/githubrunner.sh'
  - /actions-runner/svc.sh install ${config["linuxuser"]}
  - /actions-runner/svc.sh start
  - docker-compose -f /opt/docker-compose.yml up -d
  - rm -f /home/${config["linuxuser"]}/.bash_logout
